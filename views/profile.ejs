<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  </head>
  <body>
    <h1>Profile</h1>
    <div class="container">
      <img src="" alt="이미지" id="porfile_photo" />
      <div class="content">
        <div class="editProfile">
          <h3>프로필 수정 (비밀번호 변경, 성별, 이름, 전화번호, 주소 변경)</h3>
          <form id="changeProfile">
            <div>
              <input type="text" id="name" placeholder="이름">
            </div>
          <div>
            <input type="radio" name="gender" id="man" value="남자">남
            <input type="radio" name="gender" id="woman" value="여자">여
          </div>

          <div>
            <input type="text" id="email" placeholder="이메일">
          </div>
          <div>
            <input type="date" id="birth" placeholder="생년월일">
          </div>
          <div>
            <input type="text" id="phone_number" placeholder="전화번호">
          </div>
          <div class="selectedAddress">
            <div id="popup" class="popup">
              <div class="popup-content">
                <span class="close-button" id="closeButton">&times;</span>
                <input type="text" id="sample4_postcode" placeholder="우편번호" />
                <input
                  type="button"
                  onclick="sample4_execDaumPostcode()"
                  value="우편번호 찾기"
                /><br />
                <input
                  type="text"
                  id="sample4_roadAddress"
                  placeholder="도로명주소"
                />
  
                <span id="guide" style="color: #999; display: none"></span>
                <input
                  type="text"
                  id="sample4_detailAddress"
                  placeholder="상세주소"
                />
                <button type="button" id="submitAddress">확인</button>
              </div>
            </div>
          <button type="button" onclick="eidtProfile()">수정</button>
        </form>
        </div>
        <div class="hobby">관심사 수정</div>
        <div class="parties">내가 참여할 파티 내역</div>
      </div>
    </div>

    <!-- <div class="bottombar">
      <div class="leftBottomBar">
        <a href="/parties" class="a">
          <div class="select">
            <img src="/public/img/parties.svg" class="selectimg" />
            <span class="bottom partiesName"> 목록 </span>
          </div></a
        >
        <a href="/location" class="a">
          <div class="select">
            <img src="/public/img/map.svg" class="selectimg" />
            <span class="bottom locationName"> 지도 </span>
          </div></a
        >
      </div>
      <a href="/main" class="logo">
        <button class="logo">H</button>
      </a>
      <div class="rightBottomBar">
        <a href="/chat" class="a">
          <div class="select">
            <img src="/public/img/chat.svg" class="selectimg" />
            <span class="bottom chatName"> 채팅 </span>
          </div></a
        >
        <a href="/profile" class="a">
          <div class="select">
            <img src="/public/img/profile.svg" class="selectimg" />
            <span class="bottom profileName"> 마이페이지 </span>
          </div></a
        >
      </div> -->
    </div>

    <script>
      (function () {
        let result1 = "";
        const local = sessionStorage.getItem("token");
        console.log(local);
        const currentUrl = window.location.href;
        console.log(currentUrl);
        if (local != null) {
          axios({
            method: "post",
            url: `/verify`,
            data: {
              token: local,
            },
          }).then((result) => {
            result1 = result;
            console.log(result1.data.user.id);
          });
        } else {
          console.log("로그인 실패");
        }
      })();

      function EditImage() {
        const image = document.querySelector("#profile_photo");
        // 프로필 페이지 눌렀을 때 그 토큰의 아이디에 해당되는 imgURL 불러와서 src 에 넣기

        // 기존 이미지 삭제

        // 새로운 이미지 업로드

        // 새로운 이미지 URL 가져오기
      }

      async function eidtProfile() {
try {
        const form = document.forms["changeProfile"];
          const res = await axios({
            method: "POST",
            url: "/profile",
            data: {
              // id : res.data,
              name: form.name.value,
              gender: form.gender.value,
              phone_number: form.phone_number.value,
              birth: form.birth.value,
              email: form.email.value,
              location: document.getElementById("displayAddress").value,
              // image: document.getElementById("imageInput").files[0],
              token : local,
            },
          });
          console.log(res);
          await uploadImage();
          if (res.data) {
            console.log(res.data);
            alert("프로필 정보가 수정되었습니다");
            sessionStorage.setItem("token", res.data);
            
            // document.location.href = "/signin";
          }
        } catch (err) {
          console.log(err);
        }
      }

      // 프로필 수정
      

        // 주소 입력
    // 버튼과 팝업 요소 가져오기
    const popupButton = document.getElementById("popupButton");
    const popup = document.getElementById("popup");
    const closeButton = document.getElementById("closeButton");
    const topBar = document.querySelector(".topBar");

    // 버튼 클릭 시 팝업 열기
    popupButton.addEventListener("click", () => {
      popup.style.display = "block";
      topBar.style.position = "static";
      topBar.style.backgroundColor = "transparent"; // 먼저 배경색을 투명하게 설정합니다.
      topBar.style.zIndex = "1"; // z-index를 설정하여 topBar가 다른 콘텐츠 위에 나타나도록 합니다.
    });

    // 확인 버튼 클릭 시 팝업 닫기
    const submitAddress = document.querySelector("#submitAddress");
    const displayAddress = document.querySelector("#displayAddress");
    // 1. input에 입력된 데이터 보여주기
    submitAddress.addEventListener("click", () => {
      popup.style.display = "none";
      topBar.style.position = "fixed"; // topBar의 position을 다시 relative로 설정합니다.
      topBar.style.zIndex = "0"; // 기본적으로 다른 콘텐츠 아래에 나타나도록 설정합니다.

      // 입력 받은 데이터 input 태그에 추가
      displayAddress.value =
        document.getElementById("sample4_roadAddress").value +
        " " +
        document.getElementById("sample4_detailAddress").value;
    });
    // 2. 입력 값 db에 넣기

    // 팝업 외부 클릭 시 팝업 닫기
    window.addEventListener("click", (event) => {
      if (event.target === popup) {
        popup.style.display = "none";
        topBar.style.position = "fixed"; // topBar의 position을 다시 relative로 설정합니다.
        topBar.style.zIndex = "0"; // 기본적으로 다른 콘텐츠 아래에 나타나도록 설정합니다.
      }
    });

    // 지도 api
    function sample4_execDaumPostcode() {
      new daum.Postcode({
        oncomplete: function (data) {
          // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.

          // 도로명 주소의 노출 규칙에 따라 주소를 표시한다.
          // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
          var roadAddr = data.roadAddress; // 도로명 주소 변수
          var extraRoadAddr = ""; // 참고 항목 변수

          // 법정동명이 있을 경우 추가한다. (법정리는 제외)
          // 법정동의 경우 마지막 문자가 "동/로/가"로 끝난다.
          if (data.bname !== "" && /[동|로|가]$/g.test(data.bname)) {
            extraRoadAddr += data.bname;
          }
          // 건물명이 있고, 공동주택일 경우 추가한다.
          if (data.buildingName !== "" && data.apartment === "Y") {
            extraRoadAddr +=
              extraRoadAddr !== ""
                ? ", " + data.buildingName
                : data.buildingName;
          }

          // 우편번호와 주소 정보를 해당 필드에 넣는다.
          document.getElementById("sample4_postcode").value = data.zonecode;
          document.getElementById("sample4_roadAddress").value =
            roadAddr + `(${data.bname})`;

          var guideTextBox = document.getElementById("guide");
          // 사용자가 '선택 안함'을 클릭한 경우, 예상 주소라는 표시를 해준다.
          if (data.autoRoadAddress) {
            var expRoadAddr = data.autoRoadAddress + extraRoadAddr;
            guideTextBox.innerHTML = "(예상 도로명 주소 : " + expRoadAddr + ")";
            guideTextBox.style.display = "block";
          } else if (data.autoJibunAddress) {
            var expJibunAddr = data.autoJibunAddress;
            guideTextBox.innerHTML = "(예상 지번 주소 : " + expJibunAddr + ")";
            guideTextBox.style.display = "block";
          } else {
            guideTextBox.innerHTML = "";
            guideTextBox.style.display = "none";
          }
        },
      }).open();
    }
    

    </script>
  </body>
</html>
