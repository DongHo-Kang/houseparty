<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <link rel="stylesheet" href="/public/css/signup1.css" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script>
  </head>

  <body>
    <div class="container">
      <div class="topBar">
        <a class="howsParty" href="/main"> How's Party </a
        ><a class="signin" href="/signin">login</a>
      </div>

      <span id="signup1_title"> 회원가입 </span>
      <form name="register">
        <label for="imageInput">프로필 이미지</label>
        <div id="imagePreviewContainer" style="display: none">
          <img
            id="imagePreview"
            src=""
            alt="미리 보기 이미지"
            style="border-radius: 50%; max-width: 150px; max-height: 150px"
          />
        </div>
        <input
          type="file"
          id="imageInput"
          accept="image/*"
          style="display: none"
          onchange="handleFileUpload(event)"
        />

        <button
          type="button"
          onclick="document.getElementById('imageInput').click()"
        >
          이미지 선택
        </button>

        <div class="top">
          <div class="idBox">
            <img src="/public/img/id.svg" />
            <input
              type="text"
              name="id"
              id="id"
              class="id"
              placeholder="아이디"
            />
          </div>
          <div class="pwBox">
            <img src="/public/img/pw.svg" />
            <input
              type="password"
              name="pw"
              id="pw"
              class="pw"
              placeholder="비밀번호"
            />
          </div>
          <div class="pwCheckBox">
            <img src="/public/img/pw.svg" />
            <input
              type="password"
              name="pwCheck"
              id="pwCheck"
              class="pwCheck"
              placeholder="비밀번호 확인"
            />
          </div>
          <br />
        </div>

        <div class="bottom">
          <div class="nameBox">
            <img src="/public/img/id.svg" />
            <input
              type="text"
              name="name"
              id="name"
              class="name"
              placeholder="이름"
            />
          </div>
          <div class="birthBox">
            <img src="/public/img/birth.svg" />
            <input
              type="date"
              name="birth"
              id="birth"
              class="birth"
              placeholder="생년월일"
            />
          </div>
          <div class="gender">
            <input
              type="radio"
              name="gender"
              id="man"
              class="man"
              value="남자"
            />
            <label for="man" id="manLabel">남자</label>
            <input
              type="radio"
              name="gender"
              id="woman"
              class="woman"
              value="여자"
            />
            <label for="woman" id="womanLabel">여자</label>
          </div>
          <div class="phoneBox">
            <img src="/public/img/phone.svg" />
            <input
              type="number"
              name="phone_number"
              id="phone_number"
              class="phoneNumber"
              placeholder="휴대전화 번호"
            />
          </div>
        </div>

        <!-- 주소 입력 -->
        <div class="selectedAddress">
          <div id="popup" class="popup">
            <div class="popup-content">
              <span class="close-button" id="closeButton">&times;</span>
              <input type="text" id="sample4_postcode" placeholder="우편번호" />
              <input
                type="button"
                onclick="sample4_execDaumPostcode()"
                value="우편번호 찾기"
              /><br />
              <input
                type="text"
                id="sample4_roadAddress"
                placeholder="도로명주소"
              />

              <span id="guide" style="color: #999; display: none"></span>
              <input
                type="text"
                id="sample4_detailAddress"
                placeholder="상세주소"
              />
              <button type="button" id="submitAddress">확인</button>
            </div>
          </div>
          <img src="/public/img/map.svg" alt="" />
          <input type="text" placeholder="주소" id="displayAddress" readonly />
          <button type="button" id="popupButton">주소 입력</button>
        </div>

        <button
          type="button"
          id="nextButton"
          class="nextButton"
          onclick="registerFunc()"
        >
          가입하기
        </button>
      </form>
    </div>
  </body>
  <script>
    // 이미지 미리 보기 함수 안돼 왜 ㄷ안돼
    function handleFileUpload(event) {
      const selectedFile = event.target.files[0];

      // 선택된 파일을 이미지 미리보기로 표시
      const imagePreview = document.getElementById("imagePreview");
      imagePreview.src = URL.createObjectURL(selectedFile);
      console.log(URL.createObjectURL(selectedFile));
      imagePreview.style.display = "block";
      console.log(imagePreview.style.display);
    }

    // 이 함수는 이미지 선택 버튼을 클릭했을 때 호출됩니다.
    function openFileUploader() {
      document.getElementById("imageInput").click();
    }

    // 성별 라디오
    const manRadio = document.getElementById("man");
    const womanRadio = document.getElementById("woman");
    const manLabel = document.querySelector('label[for="man"]');
    const womanLabel = document.querySelector('label[for="woman"]');

    manRadio.addEventListener("change", function () {
      if (manRadio.checked) {
        manLabel.classList.add("man-selected");
        womanLabel.classList.remove("woman-selected");
        console.log("man checked");
      } else {
        manLabel.classList.remove("man-selected");
      }
    });

    womanRadio.addEventListener("change", function () {
      if (womanRadio.checked) {
        womanLabel.classList.add("woman-selected");
        manLabel.classList.remove("man-selected");
        console.log("woman checked");
      } else {
        womanLabel.classList.remove("woman-selected");
      }
    });

    // 다음 버튼
    // document
    //   .getElementById("nextButton")
    //   .addEventListener("click", function () {
    //     window.location.href = "/signup2"; // 페이지 이동
    //   });

    // 업로드 이미지
    // 업로드 이미지
    async function uploadImage() {
      const imageInput = document.getElementById("imageInput");
      const selectedImage = imageInput.files[0];
      console.log(selectedImage);
      if (selectedImage) {
        try {
          const formData = new FormData();
          formData.append("image", selectedImage);
          // 이미지를 업로드할 엔드포인트로 POST 요청 보내기
          const res = await axios.post("/upload", formData, {
            headers: {
              "Content-Type": "multipart/form-data", // FormData를 사용할 때 필요한 헤더
            },
          });
          // 업로드 성공 시 서버에서 받은 응답 처리
          console.log(res);
          alert("이미지 업로드가 완료되었습니다.");
        } catch (error) {
          console.error("이미지 업로드 중 오류 발생:", error);
        }
      } else {
        alert("이미지를 선택해주세요.");
      }
    }

    // server
    async function registerFunc() {
      const form = document.forms["register"];
      // const imageUrl =
      console.log(form.gender.value);
      try {
        const res = await axios({
          method: "POST",
          url: "/signup",
          data: {
            id: form.id.value,
            pw: form.pw.value,
            name: form.name.value,
            gender: form.gender.value,
            phone_number: form.phone_number.value,
            birth: form.birth.value,
            location: form.displayAddress.value,
            // hobby: form.favorite.value,
            image: document.getElementById("imageInput").files[0],
            // imageUrl,
          },
        });
        console.log(res);
        await uploadImage();
        if (res.data) {
          alert("회원가입을 축하드립니다");
          // document.location.href = "/signin";
        }
      } catch (err) {
        console.log(err);
      }
    }

    // 주소 입력
    // 버튼과 팝업 요소 가져오기
    const popupButton = document.getElementById("popupButton");
    const popup = document.getElementById("popup");
    const closeButton = document.getElementById("closeButton");
    const topBar = document.querySelector(".topBar");

    // 버튼 클릭 시 팝업 열기
    popupButton.addEventListener("click", () => {
      popup.style.display = "block";
      topBar.style.position = "static";
      topBar.style.backgroundColor = "transparent"; // 먼저 배경색을 투명하게 설정합니다.
      topBar.style.zIndex = "1"; // z-index를 설정하여 topBar가 다른 콘텐츠 위에 나타나도록 합니다.
    });

    // 확인 버튼 클릭 시 팝업 닫기
    const submitAddress = document.querySelector("#submitAddress");
    const displayAddress = document.querySelector("#displayAddress");
    // 1. input에 입력된 데이터 보여주기
    submitAddress.addEventListener("click", () => {
      popup.style.display = "none";
      topBar.style.position = "fixed"; // topBar의 position을 다시 relative로 설정합니다.
      topBar.style.zIndex = "0"; // 기본적으로 다른 콘텐츠 아래에 나타나도록 설정합니다.

      // 입력 받은 데이터 input 태그에 추가
      displayAddress.value =
        document.getElementById("sample4_roadAddress").value +
        " " +
        document.getElementById("sample4_detailAddress").value;
    });
    // 2. 입력 값 db에 넣기

    // 팝업 외부 클릭 시 팝업 닫기
    window.addEventListener("click", (event) => {
      if (event.target === popup) {
        popup.style.display = "none";
        topBar.style.position = "fixed"; // topBar의 position을 다시 relative로 설정합니다.
        topBar.style.zIndex = "0"; // 기본적으로 다른 콘텐츠 아래에 나타나도록 설정합니다.
      }
    });

    // 지도 api
    function sample4_execDaumPostcode() {
      new daum.Postcode({
        oncomplete: function (data) {
          // 팝업에서 검색결과 항목을 클릭했을때 실행할 코드를 작성하는 부분.

          // 도로명 주소의 노출 규칙에 따라 주소를 표시한다.
          // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
          var roadAddr = data.roadAddress; // 도로명 주소 변수
          var extraRoadAddr = ""; // 참고 항목 변수

          // 법정동명이 있을 경우 추가한다. (법정리는 제외)
          // 법정동의 경우 마지막 문자가 "동/로/가"로 끝난다.
          if (data.bname !== "" && /[동|로|가]$/g.test(data.bname)) {
            extraRoadAddr += data.bname;
          }
          // 건물명이 있고, 공동주택일 경우 추가한다.
          if (data.buildingName !== "" && data.apartment === "Y") {
            extraRoadAddr +=
              extraRoadAddr !== ""
                ? ", " + data.buildingName
                : data.buildingName;
          }

          // 우편번호와 주소 정보를 해당 필드에 넣는다.
          document.getElementById("sample4_postcode").value = data.zonecode;
          document.getElementById("sample4_roadAddress").value =
            roadAddr + `(${data.bname})`;

          var guideTextBox = document.getElementById("guide");
          // 사용자가 '선택 안함'을 클릭한 경우, 예상 주소라는 표시를 해준다.
          if (data.autoRoadAddress) {
            var expRoadAddr = data.autoRoadAddress + extraRoadAddr;
            guideTextBox.innerHTML = "(예상 도로명 주소 : " + expRoadAddr + ")";
            guideTextBox.style.display = "block";
          } else if (data.autoJibunAddress) {
            var expJibunAddr = data.autoJibunAddress;
            guideTextBox.innerHTML = "(예상 지번 주소 : " + expJibunAddr + ")";
            guideTextBox.style.display = "block";
          } else {
            guideTextBox.innerHTML = "";
            guideTextBox.style.display = "none";
          }
        },
      }).open();
    }
  </script>
</html>
